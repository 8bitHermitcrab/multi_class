# -*- coding: utf-8 -*-
"""추천_연관성 분석(Association Rule).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17TzRX_vgNW7BDQvsCOyYpcjd18wAbLkH
"""

!pip install mlxtend

import pandas as pd
from mlxtend.frequent_patterns import apriori
from mlxtend.frequent_patterns import association_rules

df = pd.read_csv('/content/drive/MyDrive/20220103_0610_국비교육/이러닝/데이터분석실습_초급중급/data/association_rules_mart.csv')
df.head(2)

df['purchase'] = True

# 구매 안 한 거는 False
df_pivot = df.pivot_table(index = 'ID', columns = 'Item', values = 'purchase', aggfunc = max, fill_value = False)
df_pivot.head(2)

item_freq = apriori(df_pivot, min_support = 0.005, use_colnames = True)
item_freq.head()

df_rules = association_rules(item_freq, metric='lift', min_threshold=1.5)
df_rules.head()

"""# 1번 문제"""

len(df)

df1 = df.iloc[:, 1].drop_duplicates()
len(df1)

df1['purchase'] = True
df_pivot1 = pd.pivot_table(data=df, index = 'ID', columns = 'Item', values = 'purchase', aggfunc = max, fill_value = False)
df_pivot1.head(2)

item_sets = apriori(df = df_pivot1, min_support=0.005, use_colnames=True)
item_sets.head(2)

rules = association_rules(item_sets, metric = 'confidence', min_threshold = 0.005)
rules.head(2)

rules_sub = rules.loc[rules['support'] > 0.1, ]
rules_sub = rules_sub.sort_values('lift', ascending=False)
rules_sub.head(2)

len(rules_sub)

"""# 2번 문제"""

df = pd.read_csv('/content/drive/MyDrive/20220103_0610_국비교육/이러닝/데이터분석실습_초급중급/data/association_rules_mart.csv')
df = df.iloc[:, 1:].drop_duplicates()
len(df)

df['purchase'] = True
df_pivot = pd.pivot_table(data=df, index='ID', columns='Item', values='purchase', aggfunc=max, fill_value=False)
df_pivot.head(2)

item_sets = apriori(df = df_pivot, min_support=0.005, use_colnames = True, max_len=3)
item_sets.head(2)

item_sets.tail(2)

rules = association_rules(item_sets, metric='confidence', min_threshold=0.005)
rules.head(2)

rules_sub = rules.loc[rules['support'] >= 0.01, ]
rules_sub = rules_sub.sort_values('lift', ascending=False)
rules_sub.head(2)

"""# 3번 문제"""

df = pd.read_csv('/content/drive/MyDrive/20220103_0610_국비교육/이러닝/데이터분석실습_초급중급/data/association_rules_mart.csv')
df.head(2)

df_item_cnt = df['Item'].value_counts().reset_index()
df_item_cnt = df_item_cnt.sort_values('Item', ascending = False)
df_item_cnt.head()

df_item_cnt = df_item_cnt.iloc[:30, ]
df_item_cnt.head(2)

df_sub = df.loc[df['Item'].isin(df_item_cnt['index']), ]
df_sub.head()

len(df_sub)

df_sub['purchase'] = True
df_pivot = pd.pivot_table(data=df_sub, index='ID', columns='Item', values='purchase', aggfunc=max, fill_value=False)
df_pivot.head(2)

item_sets = apriori(df=df_pivot, min_support = 0.005, use_colnames=True)
item_sets.head(2)

rules = association_rules(item_sets, metric='confidence', min_threshold=0.005)
rules.head(2)

rules_sub = rules.loc[rules['support'] > 0.03, ]
rules_sub = rules_sub.sort_values('lift', ascending=False)
rules_sub.head(2)

